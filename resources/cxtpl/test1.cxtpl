using namespace clang::tooling1;
using namespace clang::tooling2;
<CX=l>std::cout << "123\n";
<CX=l> bool bVar = std::any_cast< bool>(dictionary.at("bVar"));
<CX=l>std::cout << "0123\n";
<CX=l> bool cVar = std::any_cast< bool>(dictionary.at("cVar"));
<CX=l> std::vector<std::string> carNames = std::any_cast< std::vector<std::string>>(dictionary.at("carNames"));
<CX=l>std::cout << "1123\n";
<CX=l>if(bVar) {
#include <somefile0>
#include <somefile00>
<CX=l>   if(cVar) {
#include <somefile1>
#include <somefile11>
<CX=l>   } // cVar
<CX=l> } else { // bVar
#include <somefile2>
#include <somefile22>
<CX=l>} // bVar
<CX=l>for(int i = 0; i < carNames.size(); ++i) {
LOOPVALS:<CX=s>i<=CX>=<CX=r> carNames[i] <=CX>
using namespace clang;
<CX=l> } // for
using namespace jinja2;
