<CX=> // parameters begin

using namespace cxtpl_utils;

const auto generator_path
  = GetWithDefault<std::string>(cxtpl_params, "generator_path", "");

std::vector<std::string> generator_includes
  = GetWithDefault<std::vector<std::string>>
      (cxtpl_params, "generator_includes", std::vector<std::string>{});

// parameters end
/* no newline */ <=CX><CX=l>
// This is generated file. Do not modify directly.
// Path to the code generator: <CX=r> generator_path <=CX>.

<CX=l> for(const auto& fileName: generator_includes) {
<CX=r> fileName /* no newline */ <=CX><CX=l>
<CX=l> } // end for

#include <iostream>
#include <cstring>
#include <type_traits>

namespace cxxctp {
namespace generated {

// TODO
//{{GeneratedTypeclassName}}

} // namespace cxxctp
} // namespace generated
